pipeline {
    agent any
    stages {
        stage('Test') {
            steps {
                echo "SonarAnalysis..."
                sh 'sudo docker run  --rm -e SONAR_HOST_URL="http://34.203.75.235:9000" -e SONAR_LOGIN="sqp_38e8903f17c8015f1b4801bcb3c1d54157faf36f"  -v ".:/usr/src" sonarsource/sonar-scanner-cli -Dsonar.projectKey=lms'
            }
        }    
        stage('Build & Release') {
            steps {
                script {
                def packageJSON = readJSON file: 'webapp/package.json'
                def packageJSONVersion = packageJSON.version
                sh "echo '${packageJSONVersion}'"

                echo "Building..."
                sh 'cd webapp && npm install && npm run build'
                  
                echo "Releasing..."  
                sh "zip webapp/dist-'${packageJSONVersion}'.zip -r webapp/dist"
                sh "curl -v -u admin:nexus --upload-file webapp/dist-'${packageJSONVersion}'.zip http://34.203.75.235:8081/repository/lms/"  

                }
           }
        }
        stage('Deploy') {
            steps {
                  script {
                def packageJSON = readJSON file: 'webapp/package.json'
                def packageJSONVersion = packageJSON.version

                echo "Deploying..."
                sh "curl -u admin:nexus -X GET \'http://34.203.75.235:8081/repository/lms/dist-${packageJSONVersion}.zip\' --output dist-'${packageJSONVersion}'.zip"
                sh 'sudo rm -rf /var/www/html/*'
                sh "sudo unzip -o dist-'${packageJSONVersion}'.zip"
                sh "sudo cp -r webapp/dist/* /var/www/html/"

                }    
            }
        }
    }
}    
